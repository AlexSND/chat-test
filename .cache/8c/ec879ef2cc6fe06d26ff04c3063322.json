{"id":"../node_modules/assert-args/lib/validate.js","dependencies":[{"name":"/Users/snd/projects/itsumma/chat-test/package.json","includedInParent":true,"mtime":1587051154174},{"name":"/Users/snd/projects/itsumma/chat-test/node_modules/assert-args/package.json","includedInParent":true,"mtime":1587045327654},{"name":"101/is-function","loc":{"line":1,"column":25},"parent":"/Users/snd/projects/itsumma/chat-test/node_modules/assert-args/lib/validate.js","resolved":"/Users/snd/projects/itsumma/chat-test/node_modules/101/is-function.js"},{"name":"101/is-integer","loc":{"line":2,"column":24},"parent":"/Users/snd/projects/itsumma/chat-test/node_modules/assert-args/lib/validate.js","resolved":"/Users/snd/projects/itsumma/chat-test/node_modules/101/is-integer.js"},{"name":"101/is-object","loc":{"line":3,"column":23},"parent":"/Users/snd/projects/itsumma/chat-test/node_modules/assert-args/lib/validate.js","resolved":"/Users/snd/projects/itsumma/chat-test/node_modules/101/is-object.js"},{"name":"101/is-string","loc":{"line":4,"column":23},"parent":"/Users/snd/projects/itsumma/chat-test/node_modules/assert-args/lib/validate.js","resolved":"/Users/snd/projects/itsumma/chat-test/node_modules/101/is-string.js"},{"name":"./assert-type.js","loc":{"line":6,"column":25},"parent":"/Users/snd/projects/itsumma/chat-test/node_modules/assert-args/lib/validate.js","resolved":"/Users/snd/projects/itsumma/chat-test/node_modules/assert-args/lib/assert-type.js"},{"name":"./is-class.js","loc":{"line":7,"column":22},"parent":"/Users/snd/projects/itsumma/chat-test/node_modules/assert-args/lib/validate.js","resolved":"/Users/snd/projects/itsumma/chat-test/node_modules/assert-args/lib/is-class.js"},{"name":"./starts-with-vowel.js","loc":{"line":9,"column":30},"parent":"/Users/snd/projects/itsumma/chat-test/node_modules/assert-args/lib/validate.js","resolved":"/Users/snd/projects/itsumma/chat-test/node_modules/assert-args/lib/starts-with-vowel.js"},{"name":"./multi-validate.js","loc":{"line":38,"column":19},"parent":"/Users/snd/projects/itsumma/chat-test/node_modules/assert-args/lib/validate.js","resolved":"/Users/snd/projects/itsumma/chat-test/node_modules/assert-args/lib/multi-validate.js"}],"generated":{"js":"var isFunction = require('101/is-function')\nvar isInteger = require('101/is-integer')\nvar isObject = require('101/is-object')\nvar isString = require('101/is-string')\n\nvar assertType = require('./assert-type.js')\nvar isClass = require('./is-class.js')\nvar NoClass = function () {}\nvar startsWithVowel = require('./starts-with-vowel.js')\nvar classes = {\n  // primitive classes\n  string: String,\n  number: Number,\n  // extended typeof support\n  array: Array,\n  regexp: RegExp\n}\n\nmodule.exports = validate\n/**\n * validate an argument\n * @param  {string} key argument name\n * @param  {*} arg  argument value\n * @param  {string|function} validator argument validator\n */\nfunction validate (key, arg, validator, _plural) {\n  if (validator === '*') { return }\n\n  var keyStr = '\"' + key + '\"'\n  var typeStr\n  var article\n  var Class\n  var errMessage\n  var assertion\n\n  if (Array.isArray(validator)) {\n    // circular require\n    return require('./multi-validate.js')(key, arg, validator)\n  } else if (isString(validator)) {\n    // validator is a string\n    typeStr = validator\n    Class = classes[typeStr] || NoClass\n    article = startsWithVowel(typeStr) ? 'an' : 'a'\n    errMessage = _plural\n      ? (keyStr + ' must be ' + typeStr + 's')\n      : (keyStr + ' must be ' + article + ' ' + typeStr)\n\n    if (typeStr === 'integer') {\n      assertion = isInteger(arg)\n    } else if (typeStr === 'object') {\n      assertion = isObject(arg)\n    } else {\n      assertion = arg instanceof Class || typeof arg === validator\n    }\n\n    assertType(assertion, errMessage)\n  } else if (isClass(validator)) {\n    // validator is a class\n    typeStr = validator.name\n    Class = validator\n    errMessage = _plural\n      ? (keyStr + ' must be instances of \"' + typeStr + '\"')\n      : (keyStr + ' must be an instance of \"' + typeStr + '\"')\n    assertType(arg instanceof Class, errMessage)\n  } else if (isFunction(validator)) {\n    // validator is a test\n    try {\n      // test will throw an error if it fails\n      validator(arg)\n    } catch (e) {\n      e.message = (keyStr += ': ' + e.message)\n      throw e\n    }\n  } else {\n    throw new TypeError('\"validator\" must be a string, class or function')\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/assert-args/lib/validate.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}}],"sources":{"../node_modules/assert-args/lib/validate.js":"var isFunction = require('101/is-function')\nvar isInteger = require('101/is-integer')\nvar isObject = require('101/is-object')\nvar isString = require('101/is-string')\n\nvar assertType = require('./assert-type.js')\nvar isClass = require('./is-class.js')\nvar NoClass = function () {}\nvar startsWithVowel = require('./starts-with-vowel.js')\nvar classes = {\n  // primitive classes\n  string: String,\n  number: Number,\n  // extended typeof support\n  array: Array,\n  regexp: RegExp\n}\n\nmodule.exports = validate\n/**\n * validate an argument\n * @param  {string} key argument name\n * @param  {*} arg  argument value\n * @param  {string|function} validator argument validator\n */\nfunction validate (key, arg, validator, _plural) {\n  if (validator === '*') { return }\n\n  var keyStr = '\"' + key + '\"'\n  var typeStr\n  var article\n  var Class\n  var errMessage\n  var assertion\n\n  if (Array.isArray(validator)) {\n    // circular require\n    return require('./multi-validate.js')(key, arg, validator)\n  } else if (isString(validator)) {\n    // validator is a string\n    typeStr = validator\n    Class = classes[typeStr] || NoClass\n    article = startsWithVowel(typeStr) ? 'an' : 'a'\n    errMessage = _plural\n      ? (keyStr + ' must be ' + typeStr + 's')\n      : (keyStr + ' must be ' + article + ' ' + typeStr)\n\n    if (typeStr === 'integer') {\n      assertion = isInteger(arg)\n    } else if (typeStr === 'object') {\n      assertion = isObject(arg)\n    } else {\n      assertion = arg instanceof Class || typeof arg === validator\n    }\n\n    assertType(assertion, errMessage)\n  } else if (isClass(validator)) {\n    // validator is a class\n    typeStr = validator.name\n    Class = validator\n    errMessage = _plural\n      ? (keyStr + ' must be instances of \"' + typeStr + '\"')\n      : (keyStr + ' must be an instance of \"' + typeStr + '\"')\n    assertType(arg instanceof Class, errMessage)\n  } else if (isFunction(validator)) {\n    // validator is a test\n    try {\n      // test will throw an error if it fails\n      validator(arg)\n    } catch (e) {\n      e.message = (keyStr += ': ' + e.message)\n      throw e\n    }\n  } else {\n    throw new TypeError('\"validator\" must be a string, class or function')\n  }\n}\n"},"lineCount":78}},"error":null,"hash":"ee0fc00ef867a03cac021093adcf9813","cacheData":{"env":{}}}